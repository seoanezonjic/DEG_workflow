clean_samples){
	resources: -u 1 -n cal -c 16 -t '7-0:00:00' -m '16gb'
	source ~soft_bio_267/initializes/init_stbb	
	rm -rf output_files*
	if [ $link_path != "" ]; then
                ln -s $link_path/$sample/seqtrimbb_0000/output_files ./
        else    
	?
		seqtrimbb -t $trim_template -Q $read_folder'/'$sample'.fastq.gz' -w [cpu] -P $ADD_triming_opt -O output_files --full_throttle
	fi
	if [ ! -s output_files/sequences_.fastq.gz ]; then
		>&2 echo "Triming has failed"
		exit 1
	else
		module purge
		. ~soft_bio_267/initializes/init_ruby
		get_fastqc_data.rb -i 'output_files/initial_stats/*fastqc.zip' -T -H | awk '{print "$sample" "\tinitial_" $0 }' >> ../metrics
	    get_fastqc_data.rb -i 'output_files/final_stats/*fastqc.zip' -T -H | awk '{print "$sample" "\tfinal_" $0 }' >> ../metrics
		mv output_files/report_files/* ./
	fi
}

mapping_sample){
	resources: -u 1 -c 16 -m '20gb' -n cal
	module load samtools/1.9
	module load qualimap/2.2.1
	. ~josecordoba/software/initializes/init_mirdeep2
	unset DISPLAY # This line disable $DISPLAY definition to avoid errors in Qualimap html report rendering.
	mkdir dir_temp
	if [ ! -s sequences.fastq ];then
		gunzip -c clean_samples)/output_files/sequences_.fastq.gz > dir_temp/sequences.fastq
	fi
	
	filter_fastq.rb -i dir_temp/sequences.fastq -m 18 > filtered_sequences.fastq
	?
	bowtie -p [cpu] -n 0 -e 80 -l 18 -a -m 7 --best --strata $ref'/bowtie_index_mirna/genome' filtered_sequences.fastq dir_temp/mappings.bwt 2>bowtie.log
	
	bowtie2sam.pl dir_temp/mappings.bwt | samtools view -h -T $ref/genome.fa | samtools sort -o dir_temp/mapping_sorted.bam
	qualimap bamqc -nt [cpu] -bam dir_temp/mapping_sorted.bam -outdir results --java-mem-size=20G
	collapse_bwt.rb dir_temp/mappings.bwt > dir_temp/collapsed_mappings.bwt 
	convert_bowtie_output.pl dir_temp/collapsed_mappings.bwt > mapping.arf
	
	if [ ! -s mapping.arf ] || [ ! -s results/qualimapReport.html ]; then
		>&2 echo "Mapping has failed"
		exit 1
	else
		sed 's/^ *//g' results/genome_results.txt | grep number | sed 's/ of /_/g' | sed 's/([0-9\.%]*)//g' | sed 's/ bp//g' | tr -d ' ' | tr -d ',' | tr '=' "\t" |  awk '{print "$sample" "\t" $0 }' >> ../metrics
		parse_bowtie_log.sh bowtie.log | awk '{print "$sample" "\t" $0}' >> ../metrics
		rm -r sequences.fastq ./*.bam dir_temp  
	fi
}

miRNA_detection){
	resources: -m '4gb' -t '4-00:00:00'
	. ~soft_bio_267/initializes/init_ruby
	. ~josecordoba/software/initializes/init_mirdeep2
	mkdir dir_temp
	fastq2fasta.pl mapping_sample)/filtered_sequences.fastq > dir_temp/filtered_sequences.fasta
	collapse_reads_md.pl dir_temp/filtered_sequences.fasta seq > dir_temp/miRDeep2_input_reads.fasta
	?
	miRDeep2.pl dir_temp/miRDeep2_input_reads.fasta $ref/genome.fa mapping_sample)/mapping.arf $ref/ref_miRNA/miRNA_mature.fasta none $ref/ref_miRNA/miRNA_precursors.fasta -d -g -1 &>miRDeep2.log	
	if grep -q "ended" miRDeep2.log; then
		parse_miRDeep2.rb result*csv
		
		## FORMAT KNOWN MIRNA DATA
		tail -n +2 known_miRDeep_miRNAs | cut -f 1,17 | tr ":" "\t"| sed -r 's/\.\./\t/' | awk 'BEGIN{IFS="\t";OFS="\t"}{print $2,$3,$4,$1,$2":"$3":"$4}' > known_miRNA.coord
		mature2miRBase.rb known_miRNA.coord $mapping_ref/ref_miRNA/aliases.txt translated_known_miRNA.coord
		#cut -f 3,4 known_miRNA.coord > known_miRNAs.translation
		echo -e "$sample\tknown_miRNAs\t`wc -l known_miRNA.coord`" >> ../metrics
		
		## FORMAT NOVEL MIRNA DATA
		tail -n +2 novel_miRDeep_miRNAs | cut -f 1,17 | tr ":" "\t"| sed -r 's/\.\./\t/' |awk 'BEGIN{IFS="\t";OFS="\t"}{print $1,$2,$3,$1":"$2":"$3}' > novel_miRNA.coord
		echo -e "$sample\tnovel_miRNAs\t`wc -l novel_miRNA.coord`" >> ../metrics
		echo -e "$sample\ttotal_miRNAs\t`cat *_miRNA.coord | wc -l`" >> ../metrics
		report_html -t $REPORT_TEMPLATES_FOLDER/miRNA_sample.erb -d novel_miRDeep_miRNAs,known_miRDeep_miRNAs -o miRNA_report
	else
		>&2 echo "Analysis has failed" 
		exit 1
	fi
}
